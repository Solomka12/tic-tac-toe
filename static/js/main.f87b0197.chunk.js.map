{"version":3,"sources":["utils/contextHelpers.js","contexts/AppStateContext.js","utils/index.js","constants/index.js","assets/icons/o_icon.svg","assets/icons/x_icon.svg","components/Board.js","components/StatusPanel.js","components/Game.js","webpack:///./src/assets/icons/x_icon.svg?bd95","webpack:///./src/assets/icons/o_icon.svg?936a","components/Menu.js","App.js","reportWebVitals.js","index.js"],"names":["generateContextHook","entityContext","entityName","context","useContext","undefined","Error","initialState","isStarted","boardSize","marksToWin","moveChangeVariant","AppStateContext","createContext","AppDispatchContext","AppProvider","children","useState","state","setState","setByField","fieldName","val","prev","dispatchValue","setIsStarted","setBoardSize","setMarksToWin","setMoveChangeVariant","Provider","value","useAppState","useAppActions","getSplitArr","arr","gridCount","Array","Math","ceil","length","fill","map","item","i","slice","fireConfetti","angle","x","y","defaults","ticks","origin","confetti","particleCount","spread","startVelocity","gravity","decay","scalar","PLAYER_SIGN","BOARD_SIZE","Board","cells","handleCellSet","winnerRow","reset","hoveredCell","setHoveredCell","useEffect","vibrate","useCallback","throttle","duration","navigator","onTouchMove","e","touches","clientX","clientY","el","document","elementFromPoint","classList","contains","dataset","key","getCellClassNames","index","sameRow","floor","sameColumn","hovered","highlighted","Number","isInteger","victorious","includes","getCellStyle","styles","height","width","winIndex","findIndex","animationDelay","getBoardIndex","rowIndex","cellIndex","className","classNames","ended","Boolean","onClick","target","onTouchStart","onTouchEnd","changedTouches","cell","row","style","data-key","data-value","src","xIcon","oIcon","alt","StatusPanel","sign","score","currentPlayer","winnerSign","o","initialScore","Game","board","setBoard","setWinnerRow","setWinnerSign","setCurrentPlayer","startPlayerSign","setStartPlayerSign","setScore","fitsVertically","fitsHorizontally","fitsBackHorizontally","getHorizontalRow","currWinnerRow","currRowCount","j","push","getVerticalRow","getDiagonalLTRRow","getDiagonalRTLRow","emptyCellCount","horizontalRow","verticalRow","diagonalLTRRow","diagonalRTLRow","getWinnerRow","switchFirstPlayer","togglePlayer","p","prevBoard","set","_extends","Object","assign","arguments","source","prototype","hasOwnProperty","call","apply","this","_objectWithoutProperties","excluded","sourceKeys","keys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","_ref2","x1","y1","x2","y2","strokeWidth","stroke","strokeLinecap","SvgXIcon","_ref","svgRef","title","titleId","props","xmlns","viewBox","ref","id","ForwardRef","r","cx","cy","SvgOIcon","Menu","Slider","max","min","onChange","Tabs","variant","indicatorColor","textColor","Tab","icon","label","Button","size","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.f87b0197.chunk.js","sourcesContent":["import { useContext } from 'react';\r\n\r\n/* Used for generation hooks for context\r\n* @props\r\n* entityContext - context itself\r\n* entityName - string(name of context module)\r\n*  */\r\nexport const generateContextHook = (entityContext, entityName) => () => {\r\n    const context = useContext(entityContext);\r\n    if (context === undefined) {\r\n        throw new Error(`use${entityName}State must be used within a ${entityName}Provider`);\r\n    }\r\n    return context;\r\n};","import React, { createContext, useState } from 'react';\r\nimport { element } from 'prop-types';\r\n\r\nimport { generateContextHook } from '../utils/contextHelpers';\r\n\r\nconst initialState = {\r\n    isStarted: false,\r\n    boardSize: 10,\r\n    marksToWin: 5,\r\n    moveChangeVariant: 1,\r\n};\r\n\r\nconst AppStateContext = createContext();\r\nconst AppDispatchContext = createContext();\r\n\r\nconst AppProvider = ({children}) => {\r\n    const [state, setState] = useState(initialState);\r\n\r\n    const setByField = fieldName => val => setState(prev => ({...prev, [fieldName]: val}))\r\n\r\n    const dispatchValue = {\r\n        setIsStarted: setByField('isStarted'),\r\n        setBoardSize: setByField('boardSize'),\r\n        setMarksToWin: setByField('marksToWin'),\r\n        setMoveChangeVariant: setByField('moveChangeVariant'),\r\n    };\r\n\r\n    return (\r\n        <AppStateContext.Provider value={state}>\r\n            <AppDispatchContext.Provider value={dispatchValue}>\r\n                {children}\r\n            </AppDispatchContext.Provider>\r\n        </AppStateContext.Provider>\r\n    );\r\n};\r\n\r\nAppProvider.propTypes = {\r\n    children: element.isRequired,\r\n};\r\n\r\nconst useAppState = generateContextHook(AppStateContext, 'App');\r\nconst useAppActions = generateContextHook(AppDispatchContext, 'App');\r\n\r\nexport { AppProvider, useAppState, useAppActions };","import confetti from 'canvas-confetti';\r\n\r\nexport const getSplitArr = (arr, gridCount = 10) => {\r\n    return new Array(Math.ceil(arr.length / gridCount))\r\n        .fill(null)\r\n        .map((item, i) => arr.slice(gridCount * i, gridCount * i + gridCount));\r\n}\r\n\r\nexport const getWinnerRow = (board, boardSize, marksToWin) => {\r\n    const fitsVertically = i => i + boardSize * (marksToWin - 1) < boardSize * boardSize;\r\n    const fitsHorizontally = i => i % boardSize + marksToWin <= boardSize;\r\n    const fitsBackHorizontally = i => i % boardSize - (marksToWin - 1) >= 0;\r\n\r\n    const getHorizontalRow = (i, cell, board = []) => {\r\n        if (!fitsHorizontally(i)) return null;\r\n\r\n        let currWinnerRow = [i];\r\n        let currRowCount = 1;\r\n\r\n        for (let j = i + 1; currRowCount < marksToWin; j++) {\r\n            if (board[j] === cell) {\r\n                currWinnerRow.push(j);\r\n                currRowCount++;\r\n            } else {\r\n                break;\r\n            }\r\n        }\r\n\r\n        return currWinnerRow.length >= marksToWin ? currWinnerRow : null;\r\n    };\r\n\r\n    const getVerticalRow = (i, cell, board = []) => {\r\n        if (!fitsVertically(i)) return null;\r\n\r\n        let currWinnerRow = [i];\r\n        let currRowCount = 1;\r\n\r\n        for (let j = i + boardSize; currRowCount < marksToWin; j += boardSize) {\r\n            if (board[j] === cell) {\r\n                currWinnerRow.push(j);\r\n                currRowCount++;\r\n            } else {\r\n                break;\r\n            }\r\n        }\r\n\r\n        return currWinnerRow.length >= marksToWin ? currWinnerRow : null;\r\n    };\r\n\r\n    const getDiagonalLTRRow = (i, cell, board = []) => {\r\n        if (!fitsHorizontally(i) || !fitsVertically(i)) return null;\r\n\r\n        let currWinnerRow = [i];\r\n        let currRowCount = 1;\r\n\r\n        for (let j = i + boardSize + 1; currRowCount < marksToWin; j += boardSize + 1) {\r\n            if (board[j] === cell) {\r\n                currWinnerRow.push(j);\r\n                currRowCount++;\r\n            } else {\r\n                break;\r\n            }\r\n        }\r\n\r\n        return currWinnerRow.length >= marksToWin ? currWinnerRow : null;\r\n    };\r\n\r\n    const getDiagonalRTLRow = (i, cell, board = []) => {\r\n        if (!fitsVertically(i) || !fitsBackHorizontally(i)) return null;\r\n\r\n        let currWinnerRow = [i];\r\n        let currRowCount = 1;\r\n\r\n        for (let j = i + boardSize - 1; currRowCount < marksToWin; j += boardSize - 1) {\r\n            if (board[j] === cell) {\r\n                currWinnerRow.push(j);\r\n                currRowCount++;\r\n            } else {\r\n                break;\r\n            }\r\n        }\r\n\r\n        return currWinnerRow.length >= marksToWin ? currWinnerRow : null;\r\n    };\r\n\r\n    let emptyCellCount = board.length;\r\n\r\n    for (let i = 0; i < board.length; i++) {\r\n        const cell = board[i];\r\n\r\n        if (cell) {\r\n            emptyCellCount--;\r\n\r\n            const horizontalRow = getHorizontalRow(i, cell, board);\r\n            if (horizontalRow) return horizontalRow;\r\n\r\n            const verticalRow = getVerticalRow(i, cell, board);\r\n            if (verticalRow) return verticalRow;\r\n\r\n            const diagonalLTRRow = getDiagonalLTRRow(i, cell, board);\r\n            if (diagonalLTRRow) return diagonalLTRRow;\r\n\r\n            const diagonalRTLRow = getDiagonalRTLRow(i, cell, board);\r\n            if (diagonalRTLRow) return diagonalRTLRow;\r\n        }\r\n    }\r\n\r\n    if (board.length && emptyCellCount <= 0) return [];\r\n};\r\n\r\nexport const fireConfetti = (angle = 90, {x = 0.5, y = 0.5}) => {\r\n    const defaults = {angle, ticks: 400, origin: {x, y}};\r\n\r\n    confetti({\r\n        ...defaults,\r\n        particleCount: 40,\r\n        spread: 26,\r\n        startVelocity: 55,\r\n    });\r\n    confetti({\r\n        ...defaults,\r\n        particleCount: 30,\r\n        spread: 60,\r\n        gravity: 0.8\r\n    });\r\n    confetti({\r\n        ...defaults,\r\n        particleCount: 50,\r\n        spread: 100,\r\n        decay: 0.91,\r\n        scalar: 0.8,\r\n        gravity: 1.1\r\n    });\r\n    confetti({\r\n        ...defaults,\r\n        particleCount: 15,\r\n        spread: 120,\r\n        startVelocity: 25,\r\n        decay: 0.92,\r\n        scalar: 1.2,\r\n        gravity: 0.9\r\n    });\r\n    confetti({\r\n        ...defaults,\r\n        particleCount: 15,\r\n        spread: 120,\r\n        startVelocity: 45,\r\n    });\r\n};","export const PLAYER_SIGN = {X: 'x', O: 'o'};\r\n\r\nexport const BOARD_SIZE = {MAX: 20, MIN: 3};","export default __webpack_public_path__ + \"static/media/o_icon.1a6f55bb.svg\";","export default __webpack_public_path__ + \"static/media/x_icon.970deedc.svg\";","import React, {useState, useEffect, useCallback} from 'react';\r\nimport classNames from 'classnames';\r\nimport {throttle} from 'lodash';\r\n\r\nimport {getSplitArr} from '../utils'\r\nimport {PLAYER_SIGN} from \"../constants\";\r\n\r\nimport oIcon from '../assets/icons/o_icon.svg';\r\nimport xIcon from '../assets/icons/x_icon.svg';\r\n\r\nexport default function Board({cells, handleCellSet, boardSize, winnerRow, reset}) {\r\n    const [hoveredCell, setHoveredCell] = useState(null);\r\n\r\n    useEffect(() => {\r\n        if (hoveredCell !== null) vibrate(15);\r\n    }, [hoveredCell]);\r\n\r\n    const vibrate = useCallback(throttle((duration) => {\r\n        navigator.vibrate(0);\r\n        navigator.vibrate(duration);\r\n    }, 100), []);\r\n\r\n    const handleBoardClick = ({target: {classList, dataset}}) => {\r\n        if (classList.contains('cell') && dataset.value === 'empty') {\r\n            handleCellSet(dataset.key);\r\n            vibrate(25);\r\n        }\r\n    };\r\n\r\n    const onTouchMove = e => {\r\n        const {clientX, clientY} = e.touches[0];\r\n        const el = document.elementFromPoint(clientX, clientY);\r\n        setHoveredCell(el?.classList.contains('cell') ? +el.dataset.key : null);\r\n    };\r\n\r\n    const onTouchEnd = e => {\r\n        const {clientX, clientY} = e.changedTouches[0];\r\n        const el = document.elementFromPoint(clientX, clientY);\r\n        const index = el?.dataset.key;\r\n        const cell = cells[index];\r\n        if (index && cell === null) {\r\n            handleCellSet(index);\r\n            vibrate(25);\r\n        }\r\n        setHoveredCell(null);\r\n    };\r\n\r\n    const getCellClassNames = index => {\r\n        const sameRow = Math.floor(index / boardSize) === Math.floor(hoveredCell / boardSize);\r\n        const sameColumn = index % boardSize === hoveredCell % boardSize;\r\n\r\n        return {\r\n            hovered: index === hoveredCell,\r\n            highlighted: Number.isInteger(hoveredCell) && (sameRow || sameColumn),\r\n            victorious: winnerRow?.includes(index),\r\n        };\r\n    };\r\n\r\n    const getCellStyle = index => {\r\n        const styles = {height: `${100 / boardSize}%`, width: `${100 / boardSize}%`};\r\n\r\n        if (winnerRow) {\r\n            const winIndex = winnerRow.findIndex(i => i === index);\r\n            if (winIndex >= 0) styles.animationDelay = `${winIndex * (1 / boardSize)}s`;\r\n        }\r\n\r\n        return styles;\r\n    };\r\n\r\n    const getBoardIndex = (rowIndex, cellIndex) => rowIndex * boardSize + cellIndex;\r\n\r\n    return (\r\n        <div className={classNames('board-wrapper', {ended: Boolean(winnerRow)})}>\r\n            <div className=\"reset-block\" onClick={reset}>\r\n                <span className=\"win-caption\">Click to play</span>\r\n            </div>\r\n\r\n            <table\r\n                className=\"board\"\r\n                onClick={handleBoardClick}\r\n                onTouchStart={onTouchMove}\r\n                onTouchMove={onTouchMove}\r\n                onTouchEnd={onTouchEnd}\r\n            >\r\n                <tbody>\r\n                {getSplitArr(cells, boardSize).map((row, rowIndex) => (\r\n                    <tr key={rowIndex}>\r\n                        {row.map((cell, cellIndex) => (\r\n                            <td\r\n                                key={cellIndex}\r\n                                style={getCellStyle(getBoardIndex(rowIndex, cellIndex))}\r\n                                data-key={getBoardIndex(rowIndex, cellIndex)}\r\n                                data-value={cell || 'empty'}\r\n                                className={classNames('cell', getCellClassNames(getBoardIndex(rowIndex, cellIndex)))}\r\n                            >\r\n                                {cell ? <img src={cell === PLAYER_SIGN.X ? xIcon : oIcon} alt={cell}/> : null}\r\n                            </td>\r\n                        ))}\r\n                    </tr>\r\n                ))}\r\n                </tbody>\r\n            </table>\r\n        </div>\r\n    );\r\n}\r\n","import classNames from 'classnames';\r\n\r\nimport {PLAYER_SIGN} from \"../constants\";\r\n\r\nimport oIcon from '../assets/icons/o_icon.svg';\r\nimport xIcon from '../assets/icons/x_icon.svg';\r\n\r\nexport default function StatusPanel({score, currentPlayer, winnerSign}) {\r\n\r\n    const getSignIcon = sign => sign === PLAYER_SIGN.X ? xIcon : oIcon;\r\n\r\n    return (\r\n        <div className={classNames('status-panel', `${currentPlayer}-move`)} >\r\n            <span className=\"panel-x-block\">\r\n                {score.x}\r\n                <img src={xIcon} alt=\"x\"/>\r\n            </span>\r\n            <span className=\"info-content\">\r\n                {winnerSign === 'draw'\r\n                    ? 'Draw!'\r\n                    : <>\r\n                        <img src={getSignIcon(winnerSign || currentPlayer)} alt={winnerSign || currentPlayer}/>\r\n                        {winnerSign ? '\\'s win!' : '\\'s move'}\r\n                    </>\r\n                }\r\n            </span>\r\n            <span className=\"panel-o-block\">\r\n                <img src={oIcon} alt=\"o\"/>\r\n                {score.o}\r\n            </span>\r\n        </div>\r\n    );\r\n}\r\n","import React, {useState, useEffect} from 'react';\r\nimport {set} from 'lodash';\r\n\r\nimport {useAppState} from '../contexts/AppStateContext';\r\nimport {getWinnerRow, fireConfetti} from '../utils';\r\nimport {PLAYER_SIGN} from '../constants';\r\n\r\nimport Board from './Board';\r\nimport StatusPanel from './StatusPanel';\r\n\r\nconst initialScore = {[PLAYER_SIGN.X]: 0, [PLAYER_SIGN.O]: 0}\r\n\r\nexport default function Game() {\r\n    const {boardSize, marksToWin, moveChangeVariant} = useAppState();\r\n    const [board, setBoard] = useState([]);\r\n    const [winnerRow, setWinnerRow] = useState(null);\r\n    const [winnerSign, setWinnerSign] = useState(null);\r\n    const [currentPlayer, setCurrentPlayer] = useState(null);\r\n    const [startPlayerSign, setStartPlayerSign] = useState(moveChangeVariant === 2 ? PLAYER_SIGN.O : PLAYER_SIGN.X);\r\n    const [score, setScore] = useState(initialScore);\r\n\r\n    useEffect(() => {\r\n        reset();\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        const row = getWinnerRow(board, boardSize, marksToWin);\r\n        if (row) setWinnerRow(row);\r\n    }, [board, boardSize, marksToWin]);\r\n\r\n    useEffect(() => {\r\n        if (winnerRow) {\r\n            if (winnerRow.length) {\r\n                const sign = board[winnerRow[0]];\r\n                setWinnerSign(sign);\r\n                setScore(prev => ({...prev, [sign]: prev[sign] + 1}));\r\n                fireConfetti(120, {y: 0.8, x: 1});\r\n                fireConfetti(60, {y: 0.8, x: 0});\r\n            } else {\r\n                setWinnerSign('draw');\r\n            }\r\n\r\n            switchFirstPlayer();\r\n        }\r\n    }, [winnerRow]);\r\n\r\n    const reset = () => {\r\n        setCurrentPlayer(startPlayerSign);\r\n        setBoard(new Array(boardSize * boardSize).fill(null));\r\n        setWinnerRow(null);\r\n        setWinnerSign(null);\r\n    };\r\n\r\n    const handleCellSet = index => {\r\n        setBoard(prevBoard => [...set(prevBoard, index, currentPlayer)]);\r\n        togglePlayer();\r\n    };\r\n\r\n    const togglePlayer = () => {\r\n        setCurrentPlayer(p => p === PLAYER_SIGN.X ? PLAYER_SIGN.O : PLAYER_SIGN.X);\r\n    };\r\n\r\n    const switchFirstPlayer = () => {\r\n        switch (moveChangeVariant) {\r\n            case 1: setStartPlayerSign(startPlayerSign === PLAYER_SIGN.X ? PLAYER_SIGN.O : PLAYER_SIGN.X); break;\r\n            case 2: setStartPlayerSign(PLAYER_SIGN.O); break;\r\n            case 0:\r\n            default: setStartPlayerSign(PLAYER_SIGN.X);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"game\">\r\n            <StatusPanel\r\n                score={score}\r\n                currentPlayer={currentPlayer}\r\n                winnerSign={winnerSign}\r\n            />\r\n\r\n            <Board\r\n                cells={board}\r\n                boardSize={boardSize}\r\n                winnerRow={winnerRow}\r\n                handleCellSet={handleCellSet}\r\n                reset={reset}\r\n            />\r\n        </div>\r\n    );\r\n}\r\n","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nvar _ref2 = /*#__PURE__*/React.createElement(\"g\", null, /*#__PURE__*/React.createElement(\"line\", {\n  x1: 10,\n  y1: 10,\n  x2: 40,\n  y2: 40,\n  strokeWidth: 10,\n  stroke: \"#f53131\",\n  strokeLinecap: \"round\"\n}), /*#__PURE__*/React.createElement(\"line\", {\n  x1: 10,\n  y1: 40,\n  x2: 40,\n  y2: 10,\n  strokeWidth: 10,\n  stroke: \"#f53131\",\n  strokeLinecap: \"round\"\n}));\n\nfunction SvgXIcon(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, [\"title\", \"titleId\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    viewBox: \"0 0 50 50\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _ref2);\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgXIcon);\nexport default __webpack_public_path__ + \"static/media/x_icon.970deedc.svg\";\nexport { ForwardRef as ReactComponent };","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nvar _ref2 = /*#__PURE__*/React.createElement(\"circle\", {\n  r: 16,\n  cx: 25,\n  cy: 25,\n  fill: \"none\",\n  strokeWidth: 10,\n  stroke: \"#4285f4\"\n});\n\nfunction SvgOIcon(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, [\"title\", \"titleId\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    viewBox: \"0 0 50 50\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _ref2);\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgOIcon);\nexport default __webpack_public_path__ + \"static/media/o_icon.1a6f55bb.svg\";\nexport { ForwardRef as ReactComponent };","import {Button, Slider, Tabs, Tab} from '@mui/material';\r\n\r\nimport {useAppState, useAppActions} from '../contexts/AppStateContext';\r\nimport {BOARD_SIZE} from \"../constants\";\r\n\r\nimport { ReactComponent as XIcon } from '../assets/icons/x_icon.svg';\r\nimport { ReactComponent as OIcon } from '../assets/icons/o_icon.svg';\r\n\r\nexport default function Menu() {\r\n    const {boardSize, marksToWin, moveChangeVariant} = useAppState();\r\n    const {setBoardSize, setMarksToWin, setIsStarted, setMoveChangeVariant} = useAppActions();\r\n\r\n    const onBoardSizeChange = (e, value) => {\r\n        setBoardSize(value);\r\n        setMarksToWin(Math.min(value, marksToWin));\r\n    }\r\n\r\n    const onMarksToWinChange = (e, value) => setMarksToWin(value);\r\n\r\n    const onTabChange = (e, value) => setMoveChangeVariant(value);\r\n\r\n    return (\r\n        <div className=\"menu\">\r\n            <div className=\"game-configs\">\r\n                <div className=\"config-item\">\r\n                    <span className=\"config-item-label\">Board size: {boardSize}</span>\r\n                    <br/>\r\n                    <Slider\r\n                        value={boardSize}\r\n                        max={BOARD_SIZE.MAX}\r\n                        min={BOARD_SIZE.MIN}\r\n                        onChange={onBoardSizeChange}\r\n                        className=\"config-item-control\"\r\n                    />\r\n                </div>\r\n\r\n                <div className=\"config-item\">\r\n                    <span className=\"config-item-label\">Marks to win: {marksToWin}</span>\r\n                    <br/>\r\n                    <Slider\r\n                        value={marksToWin}\r\n                        max={boardSize}\r\n                        min={BOARD_SIZE.MIN}\r\n                        onChange={onMarksToWinChange}\r\n                        className=\"config-item-control\"\r\n                    />\r\n                </div>\r\n\r\n                <Tabs\r\n                    value={moveChangeVariant}\r\n                    onChange={onTabChange}\r\n                    variant=\"fullWidth\"\r\n                    indicatorColor=\"primary\"\r\n                    textColor=\"primary\"\r\n                    className=\"config-item\"\r\n                >\r\n                    <Tab className=\"menu-tab\" icon={<span className=\"tab-icon\"><XIcon /></span>} label=\"first\" />\r\n                    <Tab className=\"menu-tab\" icon={<span className=\"tab-icon\"><XIcon /><OIcon /></span>} label=\"switch\" />\r\n                    <Tab className=\"menu-tab\" icon={<span className=\"tab-icon\"><OIcon /></span>} label=\"first\" />\r\n                </Tabs>\r\n            </div>\r\n\r\n            <div className=\"menu-items\">\r\n                <Button onClick={() => setIsStarted(true)} className=\"menu-btn\" size=\"large\" variant=\"outlined\">Play</Button>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n","import React from \"react\";\n\nimport Game from './components/Game';\nimport Menu from './components/Menu';\n\nimport {useAppState} from './contexts/AppStateContext';\n\nimport './App.scss';\n\nfunction App() {\n  const {isStarted} = useAppState();\n  return isStarted ? <Game/> : <Menu />;\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport {AppProvider} from './contexts/AppStateContext';\n\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nimport './index.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <AppProvider>\n      <App />\n    </AppProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}